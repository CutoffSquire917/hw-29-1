#include <iostream>
using namespace std;

int main()
{
	//Завдання 1: Фігури на площині
	//Створіть ієрархію класів для геометричних фігур:
	//Базовий клас Shape:
	//Містить віртуальний метод CalculateArea() для обчислення площі.
	//Містить віртуальний метод Print() для виведення інформації про фігуру.
	
	//Класи-нащадки:
	//Rectangle: має довжину і ширину, реалізує методи CalculateArea() і Print().
	//Circle: має радіус, реалізує методи CalculateArea() і Print().
	//Triangle: має основу і висоту, реалізує методи CalculateArea() і Print().
	
	//У main створіть масив з вказівників на базовий клас Shape. Додайте до нього кілька об'єктів
	//різних фігур. Викличте методи CalculateArea() та Print() для всіх об'єктів через базовий клас.


	//Завдання 2: Тварини у зоопарку
	//Реалізуйте систему для опису тварин у зоопарку.
	//Базовий клас Animal:
	//Містить віртуальний метод MakeSound() для відтворення звуку.
	//Містить віртуальний метод PrintInfo() для виведення інформації про тварину.
	
	//Класи-нащадки:
	//Dog: реалізує методи MakeSound() (виводить "Гав!") та PrintInfo() (виводить "Це собака.").
	//Cat: реалізує методи MakeSound() (виводить "Мяу!") та PrintInfo() (виводить "Це кіт.").
	//Bird: реалізує методи MakeSound() (виводить "Цвірінь!") та PrintInfo() (виводить "Це птах.").
	
	//У main створіть список з декількох тварин різних типів (через вказівники на Animal). Зробіть кожну
	//з них такою, щоб вона "озвалася" (MakeSound()) і вивела інформацію про себе (PrintInfo()).


	//Завдання 3: Рахунок у банку
	//Створіть систему для обліку різних типів банківських рахунків.
	//Базовий клас Account:
	//Має поле balance для зберігання залишку на рахунку.
	//Містить віртуальний метод CalculateInterest() для обчислення процентів.
	//Містить метод Deposit(double amount) для поповнення рахунку.
	
	//Класи-нащадки:
	//SavingsAccount: додає фіксований процент (наприклад, 5%) до балансу в методі CalculateInterest().
	//CheckingAccount: не додає процентів, але стягує комісію за обслуговування (наприклад, 2% від
	//балансу).
	//FixedDepositAccount: додає вищий процент (наприклад, 10%), але не дозволяє знімати гроші до
	//певного часу (можна вивести лише помилку при спробі зняти гроші).
	
	//У main створіть масив з декількох рахунків різних типів. Проведіть поповнення (Deposit()),
	//обчисліть проценти (CalculateInterest()), та виведіть стан кожного рахунку.
}